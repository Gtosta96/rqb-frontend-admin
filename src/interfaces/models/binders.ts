export interface IBinderResponse {
  binderId: number;
  binderUiName: string;
  businessType: string;
  endDate: string;
  inceptionDate: string;
  premiumCurrency: string;
  totalBaPremiumLimit: number;
  umr: string;
}

export type IBinderRequest = any;

export interface IBinderDetailsResponse {
  aggregateReportingFrequency: string;
  aggregateReportingStartDate: null;
  agreementNum: string;
  binderId: number;
  binderUiName: string;
  bindingAuthRef: string;
  brokerFirmId: number;
  brokerInitials: string;
  brokerRef: string;
  brokerRole: string;
  businessType: string;
  certNumPrefix: string;
  chFirmId: number;
  chPin: string;
  claimsReportingFrequency: string;
  claimsReportingStartDate: null;
  clientRemittancePeriod: number;
  complianceOfficerId: number;
  consumerProdExposure: string;
  contractManagerId: number;
  currencyType: string;
  delegatedClaims: string;
  department: string;
  endDate: string;
  fcaCode: string;
  inceptionDate: string;
  instalments: number;
  insurancePeriodMonths: number;
  isFatcaRequired: boolean;
  isGrossPremiumRounded: boolean;
  isInsurance: boolean;
  isMultiCountry: boolean;
  isMultiCurrency: boolean;
  isPredetermRatesOnly: boolean;
  isReinsurance: boolean;
  leadSyndicateId: number;
  maxAdvancedInceptionDays: number;
  maxBdxRemittancePeriodDays: number;
  maxBdxSubmissionPeriodDays: number;
  maxChCommissionPercent: number;
  maxInsurancePeriodMonths: number;
  minEarnedInsuredRate: number;
  minEarnedUnderwritterRate: number;
  notifiableLimitPercent: number;
  paidPremiumReportingFrequency: string;
  paidPremiumReportingStartDate: null;
  percentageForLloyds: number;
  placingBrokerFirmId: number;
  premiumCurrency: string;
  remittancePeriodModel: string;
  responsibleBrokerId: number;
  riskReportingFrequency: string;
  riskReportingStartDate: null;
  riskSharingCommissionRate: number;
  settlementCurrency: string;
  statisticsReportingFrequency: string;
  statisticsReportingStartDate: null;
  subjectToEnglishLaw: boolean;
  surplusLinesApply: boolean;
  targetCountries: number[];
  targetCurrencies: string[];
  technicalContact: string;
  terminationNoticeDays: number;
  totalBaPremiumCurrency: string;
  totalBaPremiumLimit: number;
  totalChIncomeLimit: number;
  totalChIncomeLimitCurrency: string;
  umr: string;
  warranties: string;
  yearOfAccount: number;
}
